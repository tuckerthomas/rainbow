apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus
  namespace: argocd
  # Add this finalizer ONLY if you want these to cascade delete.
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  syncPolicy:
    syncOptions:
    - ServerSideApply=true

  project: default

  destination:
    server: https://kubernetes.default.svc
    namespace: system-monitoring

  source:
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 56.13.1
  
    chart: kube-prometheus-stack
    helm:
      valuesObject:
        namespaceOverride: "system-monitoring"
        alertmanager:
          config:
            global:
              resolve_timeout: 5m
            inhibit_rules:
              - source_matchers:
                  - 'severity = critical'
                target_matchers:
                  - 'severity =~ warning|info'
                equal:
                  - 'namespace'
                  - 'alertname'
              - source_matchers:
                  - 'severity = warning'
                target_matchers:
                  - 'severity = info'
                equal:
                  - 'namespace'
                  - 'alertname'
              - source_matchers:
                  - 'alertname = InfoInhibitor'
                target_matchers:
                  - 'severity = info'
                equal:
                  - 'namespace'
              - target_matchers:
                  - 'alertname = InfoInhibitor'
            route:
              group_by: ['namespace']
              group_wait: 30s
              group_interval: 5m
              repeat_interval: 12h
              receiver: 'hookshot'
              routes:
                - receiver: 'hookshot'
            receivers:
              - name: 'hookshot'
                webhook_configs:
                  - url: 'http://matrix-hookshot.apps.svc.cluster.local:9000/webhook/aa37351d-651a-4f25-89a3-89d26bb8312e'
            templates:
            - '/etc/alertmanager/config/*.tmpl'
          # More routes for later
          #alertmanagerSpec:
          #  alertmanagerConfigSelector:
          #    matchLabels:
          #      alertmanagerConfig: config
          ingress:
            enabled: true
            path: /
            hosts:
              - alertmanager.k8s.tuckerthomas.com
            annotations:
              kubernetes.io/ingress.class: traefik
              traefik.ingress.kubernetes.io/router.entrypoints: web,websecure
            labels: {}
        grafana:
          ingress:
            enabled: true
            path: /
            hosts:
              - grafana.k8s.tuckerthomas.com
            annotations:
              kubernetes.io/ingress.class: traefik
              traefik.ingress.kubernetes.io/router.entrypoints: web,websecure
            labels: {}
        prometheus:
          ingress:
            enabled: true
            path: /
            hosts:
              - prometheus.k8s.tuckerthomas.com
            annotations:
              kubernetes.io/ingress.class: traefik
              traefik.ingress.kubernetes.io/router.entrypoints: web,websecure
            labels: {}
