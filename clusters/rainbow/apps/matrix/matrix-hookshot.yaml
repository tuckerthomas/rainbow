apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: matrix-hookshot
  namespace: argocd
  # Add this finalizer ONLY if you want these to cascade delete.
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default

  destination:
    server: https://kubernetes.default.svc
    namespace: apps

  source:
    repoURL: https://matrix-org.github.io/matrix-hookshot
    targetRevision: 0.1.15 # For Helm, this refers to the chart version.

    chart: hookshot
    helm:
      valuesObject:
        ingress:
          webhook:
            # -- Enable ingress for webhook
            enabled: true
            # -- Ingress class name for webhook ingress
            #className: ""
            # -- Annotations for webhook ingress
            annotations: {}
            # -- Host configuration for webhook ingress
            hosts:
              - host: hookshot.matrix.k8s.tuckerthomas.com
                paths:
                - path: /webhook/
                  pathType: Prefix
                  port: 9000
            # -- TLS configuration for webhook ingress
            tls: []

          appservice:
            # -- Enable ingress for appservice
            enabled: true
            # -- Ingress class name for appservice ingress
            #className: ""
            # -- Annotations for appservice ingress
            annotations: {}
            # -- Host configuration for appservice ingress
            hosts:
              - host: hookshot.matrix.k8s.tuckerthomas.com
                paths:
                - path: /
                  pathType: Prefix
                  port: 9002
            # -- TLS configuration for appservice ingress
            tls: []

        hookshot:
          # -- Raw Hookshot configuration. Gets templated into a YAML file and then loaded unless an existingConfigMap is specified.
          config:
            bridge:
              # Basic homeserver configuration
              #
              domain: matrix.k8s.tuckerthomas.com
              url: http://matrix-dendrite.apps.svc.cluster.local:8008
              mediaUrl: https://matrix.k8s.tuckerthomas.com
              port: 9002
              bindAddress: 0.0.0.0
            generic:
              # (Optional) Support for generic webhook events.
              #'allowJsTransformationFunctions' will allow users to write short transformation snippets in code, and thus is unsafe in untrusted environments
              #
              #
              enabled: true
              enableHttpGet: false
              urlPrefix: https://hookshot.matrix.k8s.tuckerthomas.com/webhook/
              userIdPrefix: _webhooks_
              allowJsTransformationFunctions: false
              waitForComplete: false

            feeds:
              # (Optional) Configure this to enable RSS/Atom feed support
              #
              enabled: false
              pollIntervalSeconds: 600
              pollTimeoutSeconds: 30
            # provisioning:
              # (Optional) Provisioning API for integration managers
              #
              # secret: "!secretToken"
            passFile: "/data/passkey.pem"
            # A passkey used to encrypt tokens stored inside the bridge.
            # Run openssl genpkey -out passkey.pem -outform PEM -algorithm RSA -pkeyopt rsa_keygen_bits:4096 to generate
            #
            # bot:
              # (Optional) Define profile information for the bot user
              #
              # displayname: Hookshot Bot
              # avatar: mxc://half-shot.uk/2876e89ccade4cb615e210c458e2a7a6883fe17d
            # serviceBots:
              # (Optional) Define additional bot users for specific services
              #
              # - localpart: feeds
              #   displayname: Feeds
              #   avatar: mxc://half-shot.uk/2876e89ccade4cb615e210c458e2a7a6883fe17d
              #   prefix: "!feeds"
              #   service: feeds
            metrics:
              # (Optional) Prometheus metrics support
              #
              enabled: true
            # queue:
              # (Optional) Message queue / cache configuration options for large scale deployments.
              # For encryption to work, must be set to monolithic mode and have a host & port specified.
              #
              # monolithic: true
              # port: 6379
              # host: localhost
            logging:
              # (Optional) Logging settings. You can have a severity debug,info,warn,error
              #
              level: debug
              colorize: true
              json: false
              timestampFormat: HH:mm:ss:SSS
            # widgets:
              # (Optional) EXPERIMENTAL support for complimentary widgets
              #
              # addToAdminRooms: false
              # disallowedIpRanges:
                # - 127.0.0.0/8
                # - 10.0.0.0/8
                # - 172.16.0.0/12
                # - 192.168.0.0/16
                # - 100.64.0.0/10
                # - 192.0.0.0/24
                # - 169.254.0.0/16
                # - 192.88.99.0/24
                # - 198.18.0.0/15
                # - 192.0.2.0/24
                # - 198.51.100.0/24
                # - 203.0.113.0/24
                # - 224.0.0.0/4
                # - ::1/128
                # - fe80::/10
                # - fc00::/7
                # - 2001:db8::/32
                # - ff00::/8
                # - fec0::/10
              # roomSetupWidget:
                # addOnInvite: false
              # publicUrl: https://example.com/widgetapi/v1/static/
              # branding:
                # widgetTitle: Hookshot Configuration
            # permissions:
              # (Optional) Permissions for using the bridge. See docs/setup.md#permissions for help
              #
              # - actor: example.com
              #   services:
              #     - service: "*"
              #       level: admin
            listeners:
              # (Optional) HTTP Listener configuration.
              # Bind resource endpoints to ports and addresses.
              # 'port' must be specified. Each listener must listen on a unique port.
              # 'bindAddress' will default to '127.0.0.1' if not specified, which may not be suited to Docker environments.
              # 'resources' may be any of webhooks, widgets, metrics, provisioning
              #
              - port: 9000
                bindAddress: 0.0.0.0
                resources:
                  - webhooks
                  - widgets
              - port: 9001
                bindAddress: 127.0.0.1
                resources:
                  - metrics
                  - provisioning
          registration:
            id: matrix-hookshot # This can be anything, but must be unique within your homeserver
            as_token: matrixhookshot # This again can be a random string
            hs_token: matrixhookshot # ..as can this
            namespaces:
              rooms: []
              users: # In the following, foobar is your homeserver's domain
                - regex: "@_github_.*:foobar"
                  exclusive: true
                - regex: "@_gitlab_.*:foobar"
                  exclusive: true
                - regex: "@_jira_.*:foobar"
                  exclusive: true
                - regex: "@_webhooks_.*:foobar" # Where _webhooks_ is set by userIdPrefix in config.yml
                  exclusive: true
                - regex: "@feeds:foobar" # Matches the localpart of all serviceBots in config.yml
                  exclusive: true
              aliases:
                - regex: "#github_.+:foobar" # Where foobar is your homeserver's domain
                  exclusive: true
            sender_localpart: hookshot
            url: "matrix-hookshot.apps.svc.cluster.local:9002"
            rate_limited: false
          passkey: "-----BEGIN PRIVATE KEY-----\nMIIJRAIBADANBgkqhkiG9w0BAQEFAASCCS4wggkqAgEAAoICAQCtqFU7tzgty6/m\nN/SnuweZykYo2KV3m5lExeQykVSP49bVd3WJ64U2JUv4CiQNPWYSPWcwFrijLZia\nIrzPsR02odNTymorrI+S4Fy2OD+XTQAXNvIOkQD48nc6IwuxUsTnZl80EV2Ang4g\n15rk65TkE3fYGkgZQPdx6aEvDsYB1qPBqXNMqvNsl2+vw+wBS6ZJVdOvcu9NGuAe\naZPS5gunPWfKLvMTeWfLqd4F+Xheq9r6sRj1b1Jfa+5GssbnbIhTpQm0WR4WdxFI\nXLBd91IF4FsGN5Qqp0t8JVp0aGlk3e4YBXNhZ4iy2nnDsLakbRNuOeh3DgHe4sSm\nL8JstDZwOSzcXxBzg7A4+9iX5s0BN/2AMOU1DsDIOmPKbawW8A1bnDCxHqycHP6/\niF97SgGscn5LaCf+UdqRjWs+XdV6TZ4zqHPvaRQlTFJkM81hjJL9AFMCEn3YsCTR\nbdEDSIQmei/wj9XhlpzVVXG6PxG0ceUHHVK7Q6emdEMoyQisbTGfVgWblP/xm3cR\n3osiqjo0gIZad/CL3EtGR5UIeROnv+VkbkdEHsZQQwVQ1+rgDmEo5TgsR0e26+T6\nrgnMYZtekDorBjV9YbfXcEYyI8NXi7nultvu9nt8Mo9uocKBOCD33NrlDmSvih6e\nU5adixawcqYu7jCS1htkrbijb6qetQIDAQABAoICAA5N2JF15tJ83eUOdGBRi097\nZhqMt9p5jl8oFsMkjezZRVOphpzA8eTTHyYT/cK6bTsw5BxFrtlAEvsVQ+yup9ud\nakkTWfn1eZENWo2m5fQKQ2jmHXueLZCT9karZtXpHa960vo4uPU0b7D8WXWkQwwj\nX2KFTa2I2KkBJ8X2x1AU9EGqOcVVqn3mHmzBrGGx78VIJMrlonj9LvtKUoMTcF/K\n8s7oXZzbyfUwbYmb8jKIIN438riavhP+ka6woKok2jjblghNM+mBTsLhYaSnz9GM\nmKrTLqjxxUm5UPFYPWAx2KARaN7b1pp23QNFvdGe63QPoIqX9Ib9slmHAxKNqJMk\nRb4ChTz0/uja/slP29BlXsbHB1JPRaDQU/fMeLNgjBv8oi7WVSRoxlmiWMtlqy7+\nYPNodQdavDBoJ9rEFd7/fF77GpqmhCowvigUWPEWY6owhl+xhAYCl2FSLkLAeeU2\n77vSo1dEg2YHQ/8/2nJBP16RWcOU33GJROUAzPmExRqBADrNw02uDf3ugDR51Rjt\nM//HTX8hbPblrCmsAf62tP/GanILPI+ggJZz/dXIfnbdc3K1zMAhYNkXsnG3wnnX\nx3xFP4zv5iYv71sfRGWApt2G3xPeTKQ37jGaSeBEcEloWYHGP7IVS3148m2RpCKW\nLj+PaitmnBqAY77uzNkBAoIBAQDziopB4k4/2QEZZETHkatZd7SdS9k97p3PqARX\nyAThnv9OlhW0IOgYuN4ZLs4oWjXx7ndcr/+dUGjx5c0fibvrHGgBnRKR9PaS4yDa\nl9TslnsvXZejE02xWSF+XCdhZKuBGueM+AsgRy068LdnF3gozfHYArvDSnLds7ET\n+3j5ZsDYXzHt5SWMjcvbDA6ivW3jQ9hQ2U5pWFIV2lMQ7TEc857wI9T/2OiJoh/t\nJA0oMgZ2jsucaCLIC5S6NraMuVM1Epjs22F6BqKINeoySdyudOT2zdj2XDqJdTYJ\nWXe5j70z7vUp5/GpexnC7yp7lYAxB3dFJaRSUzquSBzBX+UBAoIBAQC2ipWJZi04\nj3Z8tsXs+DJIE9rhMJwCheHQkoid2h5yFzg2+afUD/c3/LAX7HuNfV4TlkCZkva2\nviallhFYcWrJBH6IF+0vAUXMx0zPIwKV029rR/3/FcYE9DbTmoQQii82Ef/siNY+\ncGCeJft9Be6S+A27YSUEqRshsLW9I2E0JTJOPWqEwO8D++ZBbI+NTJT+7jcdlNGW\n8DxIQJcqrrLUg8yD7OZYSsZ1w6awE8oxfdnkLBpKy/LumzdtthELR5JYQhDZWgFf\n2Hf4XPYAskSNFYLx9gf+LWM7gzap6QpVRXd5HJZDYbTzWvvfM+o7EIxxbhLt+QC2\nPVEWG5al9LW1AoIBAQCv2GBrodOOFknM47Elx/BI8T3gNVvuc9ROk6pPF4Uuw3bk\nb0nMfdYXw6PZ2wnP6RL6VIyqyAlwtRaRUrQBCZo98IzIXXmDGbTP6l9WdjqveRgI\n4zMR9GYsn4anjjKBCActeRenmZGvBLWL0TMbpL6F9+2fYpngMGkv2wcIvpJiweaM\nVG/grYunKNsAlnwa1Vv6tIoEFmOffL4IOVOw7RKBLQadrcGl2iBNAFq9B0LYuwYf\npIsvq6Exf+sraUX15fpGX987ZkvDp/bDEuq+1MYa0Rxhd9AoUf+SMKeLqKXhvf+G\n+Arc7zR2gwPe1IGAKjodLJ7ZtownRSEhpb/dgDgBAoIBAQCnqM4ELwbl5k7r6WwN\nZUG5lhL5to30e0eXLJ+ybH5+R/ln9RJC4o8sqziKILiyki1wTBb1d1iHLEuO1zED\nTNjJ3Qjisyc0fzS/C2bu8bcUKekyXiNawYLpVe1tmYQnNOR8AzhO5rfxDYKQf05n\n3KTt9EuYiXdYuoGjBg1GtVI4dNmppxtI53Qg8qLgAHgxTd+j7uRMlT2UJv8XVcwC\ndgbmzk9v9Iz1F2kFDTjyjJqvrmoM+r0DaiOtKH9Wk11AQPKXgca7+8E7aTV3ttp0\ndUglVVa6KkHZIZL9PF1e3h6Rh4ZehPU22m06/5xLvAEtUtvL61ATpxsSR2tMpPZP\nY13pAoIBAQDh0ZyL3RYwW6namwcBP522UtpoMSKyuU9G/bkBEmeOQgdDFfXvBHZD\n9ZfPQmS3G3fCpr3e7xb4rVQF5FuQQQ4NiQ1wBrVXQYOgMPsdpxXADJXnWat1NFX3\nSNgflZ3TMge8YdmW5l5+TWwHcSW76gsD5PyjkEAbAF8Zu97wPQy/JSsrGJdacmuu\nOInU90q6uuF6aROPUd6YgjSu7vCevuqR9TSlNmBMxMccT1FoiqHNeghb8NuinmYf\nK6hxQTv+3QukugJhtsKd7WgFIgmLM6+6AnjRLYS59TvKCZbh8hWvr5Pr3ZYvG++x\n1Key/Nyof1IYiEg+4MJ/oNDSe+Y3GolD\n-----END PRIVATE KEY-----\n"
