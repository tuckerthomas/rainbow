apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: sonarr
  namespace: argocd
  annotations:
    argocd-image-updater.argoproj.io/image-list: sonarr=ghcr.io/linuxserver/sonarr
    argocd-image-updater.argoproj.io/sonarr.platforms: linux/arm64,linux/amd64
    argocd-image-updater.argoproj.io/sonarr.update-strategy: name
    argocd-image-updater.argoproj.io/sonarr.allow-tags: regexp:^nightly
    argocd-image-updater.argoproj.io/write-back-method: git
  # Add this finalizer ONLY if you want these to cascade delete.
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default

  # TODO: Check if sonarr gets postgres support https://github.com/Sonarr/Sonarr/pull/4999
  destination:
    server: https://kubernetes.default.svc
    namespace: apps

  source:
    repoURL: https://k8s-at-home.com/charts
    targetRevision: 16.3.2

    chart: sonarr
    helm:
      values: |
        env:
          PUID: 1038
          PGID: 65538
          TZ: UTC
        image:
          pullPolicy: IfNotPresent
          repository: ghcr.io/linuxserver/sonarr
          tag: develop-4.0.0.492-ls474
        ingress:
          main:
            enabled: false
        #initContainers:
        #  update-volume-permission:
        #    command:
        #    - sh
        #    - -c
        #    - chown -R 1038:65538 /config
        #    image: busybox
        #    securityContext:
        #      runAsUser: 0
        #    volumeMounts:
        #    - mountPath: /config
        #      name: config
        metrics:
          enabled: false
          exporter:
            env:
              additionalMetrics: false
              port: 9794
              unknownQueueItems: false
            image:
              pullPolicy: IfNotPresent
              repository: ghcr.io/onedr0p/exportarr
              tag: v1.0.0
          prometheusRule:
            enabled: false
            labels: {}
            rules: []
          serviceMonitor:
            interval: 3m
            labels: {}
            scrapeTimeout: 1m
        persistence:
          config:
          #  enabled: true
          #  existingClaim: sonarr-config
            enabled: true
            ype: pvc
            ccessMode: ReadWriteOnce
            ize: 1Gi
          downloads:
            enabled: true
            mountPath: /downloads
            type: custom
            volumeSpec:
              nfs:
                path: /volume1/Media/downloads
                server: 192.168.1.10
          tv:
            enabled: true
            mountPath: /tv
            type: custom
            volumeSpec:
              nfs:
                path: /volume1/Media/tv
                server: 192.168.1.10
        service:
          main:
            annotations:
              metallb.universe.tf/loadBalancerIPs: 192.168.1.100
            ports:
              http:
                port: 8989
                targetPort: 8989
            type: NodePort
        
        